[{"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\index.tsx":"1","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\App.tsx":"2","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\Contexts\\ActiveUserContext.tsx":"3","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\Router\\Router.tsx":"4","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\Services\\UserService.ts":"5","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\config\\Authorities.ts":"6","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\config\\Api.ts":"7","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\Services\\AuthorityService.ts":"8","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\Router\\PrivateRoute.tsx":"9","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\pages\\LoginPage\\LoginPage.tsx":"10","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\pages\\HomePage\\HomePage.tsx":"11","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\pages\\UnauthorizedPage\\UnauthorizedPage.tsx":"12","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\pages\\AdminPage\\AdminPage.tsx":"13","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\pages\\LandingPage\\LandingPage.tsx":"14","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\pages\\ProfilePage\\ProfilePage.tsx":"15","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\Services\\ImagePostService.ts":"16","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\organisms\\LandingPageBox\\LandingPageBox.tsx":"17","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\organisms\\ImagePostBlog\\ImagePostBlog.tsx":"18","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\organisms\\NavBar\\NavBar.tsx":"19","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\organisms\\BottomBar\\BottomBar.tsx":"20","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\organisms\\UserList\\UserList.tsx":"21","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\organisms\\UserDetailsBox\\UserDetailsBox.tsx":"22","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\molecules\\EditUserPopUp\\EditUserPopUp.tsx":"23","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\molecules\\CreatePostPopUp\\CreateEditPostPopUp.tsx":"24","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\molecules\\SearchBar\\SearchBar.tsx":"25","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\molecules\\imagePost\\ImagePostEntry.tsx":"26","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\molecules\\UserEntry\\UserEntry.tsx":"27","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\molecules\\EditPostPopUp\\EditPostPopUp.tsx":"28","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\index.tsx":"29","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\App.tsx":"30","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\Contexts\\ActiveUserContext.tsx":"31","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\Router\\Router.tsx":"32","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\config\\Api.ts":"33","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\Services\\AuthorityService.ts":"34","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\Services\\UserService.ts":"35","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\config\\Authorities.ts":"36","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\Router\\PrivateRoute.tsx":"37","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\pages\\LoginPage\\LoginPage.tsx":"38","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\pages\\HomePage\\HomePage.tsx":"39","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\pages\\LandingPage\\LandingPage.tsx":"40","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\pages\\ProfilePage\\ProfilePage.tsx":"41","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\pages\\AdminPage\\AdminPage.tsx":"42","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\pages\\UnauthorizedPage\\UnauthorizedPage.tsx":"43","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\Services\\ImagePostService.ts":"44","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\organisms\\ImagePostBlog\\ImagePostBlog.tsx":"45","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\organisms\\BottomBar\\BottomBar.tsx":"46","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\organisms\\NavBar\\NavBar.tsx":"47","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\organisms\\LandingPageBox\\LandingPageBox.tsx":"48","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\organisms\\UserDetailsBox\\UserDetailsBox.tsx":"49","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\molecules\\EditUserPopUp\\EditUserPopUp.tsx":"50","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\molecules\\CreatePostPopUp\\CreateEditPostPopUp.tsx":"51","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\organisms\\UserList\\UserList.tsx":"52","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\molecules\\imagePost\\ImagePostEntry.tsx":"53","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\molecules\\SearchBar\\SearchBar.tsx":"54","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\molecules\\UserEntry\\UserEntry.tsx":"55","C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\molecules\\EditPostPopUp\\EditPostPopUp.tsx":"56"},{"size":382,"mtime":1667289925299,"results":"57","hashOfConfig":"58"},{"size":316,"mtime":1667289925294,"results":"59","hashOfConfig":"58"},{"size":6322,"mtime":1668092284069,"results":"60","hashOfConfig":"58"},{"size":2111,"mtime":1668414746965,"results":"61","hashOfConfig":"58"},{"size":1014,"mtime":1668348393790,"results":"62","hashOfConfig":"58"},{"size":191,"mtime":1668092284080,"results":"63","hashOfConfig":"58"},{"size":1817,"mtime":1667289925298,"results":"64","hashOfConfig":"58"},{"size":1171,"mtime":1668092277249,"results":"65","hashOfConfig":"58"},{"size":2325,"mtime":1668092284069,"results":"66","hashOfConfig":"58"},{"size":3296,"mtime":1668348393806,"results":"67","hashOfConfig":"58"},{"size":1577,"mtime":1668756644382,"results":"68","hashOfConfig":"58"},{"size":657,"mtime":1668414747065,"results":"69","hashOfConfig":"58"},{"size":3627,"mtime":1668756644378,"results":"70","hashOfConfig":"58"},{"size":458,"mtime":1668414747052,"results":"71","hashOfConfig":"58"},{"size":3523,"mtime":1668756644386,"results":"72","hashOfConfig":"58"},{"size":1892,"mtime":1668368749292,"results":"73","hashOfConfig":"58"},{"size":560,"mtime":1668414747012,"results":"74","hashOfConfig":"58"},{"size":3145,"mtime":1668756644373,"results":"75","hashOfConfig":"58"},{"size":2280,"mtime":1668414747020,"results":"76","hashOfConfig":"58"},{"size":669,"mtime":1668153893722,"results":"77","hashOfConfig":"58"},{"size":1413,"mtime":1668414747032,"results":"78","hashOfConfig":"58"},{"size":968,"mtime":1668414747026,"results":"79","hashOfConfig":"58"},{"size":6107,"mtime":1668414746981,"results":"80","hashOfConfig":"58"},{"size":5812,"mtime":1668756644362,"results":"81","hashOfConfig":"58"},{"size":1247,"mtime":1668414746987,"results":"82","hashOfConfig":"58"},{"size":6191,"mtime":1668756644369,"results":"83","hashOfConfig":"58"},{"size":1646,"mtime":1668414746993,"results":"84","hashOfConfig":"58"},{"size":5681,"mtime":1668756644366,"results":"85","hashOfConfig":"58"},{"size":382,"mtime":1669104811577,"results":"86","hashOfConfig":"87"},{"size":316,"mtime":1669104811559,"results":"88","hashOfConfig":"87"},{"size":6322,"mtime":1669104811559,"results":"89","hashOfConfig":"87"},{"size":2111,"mtime":1669104811560,"results":"90","hashOfConfig":"87"},{"size":1817,"mtime":1669104811575,"results":"91","hashOfConfig":"87"},{"size":1171,"mtime":1669104811561,"results":"92","hashOfConfig":"87"},{"size":1014,"mtime":1669104811562,"results":"93","hashOfConfig":"87"},{"size":191,"mtime":1669104811576,"results":"94","hashOfConfig":"87"},{"size":2325,"mtime":1669104811560,"results":"95","hashOfConfig":"87"},{"size":3296,"mtime":1669104811574,"results":"96","hashOfConfig":"87"},{"size":1577,"mtime":1669104811572,"results":"97","hashOfConfig":"87"},{"size":458,"mtime":1669104811573,"results":"98","hashOfConfig":"87"},{"size":3523,"mtime":1669104811574,"results":"99","hashOfConfig":"87"},{"size":3627,"mtime":1669104811572,"results":"100","hashOfConfig":"87"},{"size":657,"mtime":1669104811575,"results":"101","hashOfConfig":"87"},{"size":1892,"mtime":1669104811561,"results":"102","hashOfConfig":"87"},{"size":3145,"mtime":1669104811569,"results":"103","hashOfConfig":"87"},{"size":669,"mtime":1669104811568,"results":"104","hashOfConfig":"87"},{"size":2280,"mtime":1669104811570,"results":"105","hashOfConfig":"87"},{"size":560,"mtime":1669104811569,"results":"106","hashOfConfig":"87"},{"size":968,"mtime":1669104811570,"results":"107","hashOfConfig":"87"},{"size":6107,"mtime":1669104811565,"results":"108","hashOfConfig":"87"},{"size":5812,"mtime":1669104811564,"results":"109","hashOfConfig":"87"},{"size":1413,"mtime":1669104811571,"results":"110","hashOfConfig":"87"},{"size":6191,"mtime":1669104811567,"results":"111","hashOfConfig":"87"},{"size":1247,"mtime":1669104811566,"results":"112","hashOfConfig":"87"},{"size":1646,"mtime":1669104811567,"results":"113","hashOfConfig":"87"},{"size":5681,"mtime":1669104811564,"results":"114","hashOfConfig":"87"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"107ab12",{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zxy6rj",{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\index.tsx",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\App.tsx",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\Contexts\\ActiveUserContext.tsx",["232"],"import { createContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../config/Api\";\r\nimport roles from \"../config/Roles\";\r\nimport AuthorityService from \"../Services/AuthorityService\";\r\nimport UserService from \"../Services/UserService\";\r\nimport { User } from \"../types/models/User.model\";\r\nimport { Nullable } from \"../types/Nullable\";\r\n\r\n/**\r\n * USER_DATA_LOCAL_STORAGE_KEY defines the localStorageKey in which the\r\n * activeUser gets stored.\r\n */\r\nexport const USER_DATA_LOCAL_STORAGE_KEY = \"user\";\r\nexport const TOKEN_LOCAL_STORAGE_KEY = \"token\";\r\n\r\n/**\r\n * ActiveUserContextType defines the provided values\r\n */\r\nexport type ActiveUserContextType = {\r\n  user: Nullable<User>;\r\n  login: (email: string, password: string) => Promise<boolean>;\r\n  logout: () => void;\r\n  setActiveUser: (user: User) => void;\r\n  loadActiveUser: () => void;\r\n  checkRole: (roleToCheck: keyof typeof roles) => boolean;\r\n};\r\n\r\n/**\r\n * noContextProviderFound is a method that throws an error and is used\r\n * inside the defaultContextValue\r\n */\r\nconst noContextProviderFound = () => {\r\n  throw new Error(\"No provider for the ActiveUserContext found\");\r\n};\r\n\r\n/**\r\n * defaultContextValue defines the default values for the ActiveUserContext.\r\n */\r\nconst defaultContextValue: ActiveUserContextType = {\r\n  user: null,\r\n  login: noContextProviderFound,\r\n  logout: noContextProviderFound,\r\n  setActiveUser: noContextProviderFound,\r\n  loadActiveUser: noContextProviderFound,\r\n  checkRole: noContextProviderFound,\r\n};\r\n\r\n/**\r\n * ActiveUserContext has the purpose of providing the currently active user\r\n * as well as related values, modifiers and related operations such as login\r\n * and logout.\r\n */\r\nconst ActiveUserContext =\r\n  createContext<ActiveUserContextType>(defaultContextValue);\r\nexport default ActiveUserContext;\r\n\r\n/**\r\n * Props for the ActiveUserContextProvider Component\r\n */\r\ntype ActiveUserContextProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\n/**\r\n * ActiveUserContextProvider Component is used to provide the ActiveUserContext\r\n * to all child-components.\r\n * @param children consists of all the elements that are located inside the\r\n */\r\nexport const ActiveUserContextProvider = ({\r\n  children,\r\n}: ActiveUserContextProviderProps) => {\r\n  /**\r\n   * Try to load the user data that is stored inside the LocalStorage.\r\n   * If non is present, null will be returned.\r\n   */\r\n  const loadSavedUserData = (): Nullable<User> => {\r\n    const storeUser = localStorage.getItem(USER_DATA_LOCAL_STORAGE_KEY);\r\n    if (storeUser === null) return null;\r\n    return JSON.parse(storeUser);\r\n  };\r\n\r\n  // The following line defines the user state which is holding the user\r\n  // data inside this context.\r\n  const [user, setUser] = useState<Nullable<User>>(() => loadSavedUserData());\r\n  const navigate = useNavigate();\r\n  /**\r\n   * Update the user that is provided by the ActiveUserContext\r\n   * @param updatedUser\r\n   */\r\n  const setActiveUser = (updatedUser: User) => {\r\n    setUser(updatedUser);\r\n    localStorage.setItem(\r\n      USER_DATA_LOCAL_STORAGE_KEY,\r\n      JSON.stringify(updatedUser)\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Remove all user and authorization related data from the localStorage\r\n   */\r\n  const resetAuthorization = () => {\r\n    // Reset the stored data inside the AuthorityService.\r\n    AuthorityService.clearAuthorities();\r\n    // Clear all data from the localStorage.\r\n    localStorage.clear();\r\n    // Set the user, which is stored inside the context to null.\r\n    setUser(null);\r\n  };\r\n\r\n  /**\r\n   * Logout the currently active user by resetting the stored user data\r\n   * and redirecting to the LoginPage.\r\n   */\r\n  const logout = () => {\r\n    // If no token is saved inside the local storage clear the localStorage directly\r\n    if (localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY) === null) {\r\n      resetAuthorization();\r\n      return;\r\n    }\r\n    // If a token is present send a logout-request and clear the localStorage afterwards\r\n    api.get(\"/logout\").finally(resetAuthorization);\r\n    //navigate to login page\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  /**\r\n   * Login with the provided credentials. If successful the current user gets\r\n   * updated and stored inside the context. Also the JWT-Token for further\r\n   * request based authentication is stored inside the localStorage.\r\n   * @param email\r\n   * @param password\r\n   */\r\n  const login = async (email: string, password: string) => {\r\n    await api.post(\"user/login\", { email, password }).then((response: any) => {\r\n      console.log(response.headers.authorization);\r\n      localStorage.setItem(\r\n        TOKEN_LOCAL_STORAGE_KEY,\r\n        response.headers.authorization\r\n      );\r\n      setActiveUser(response.data);\r\n      return true;\r\n    });\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Request the user data for the currently active user from the api\r\n   * and save it to the context-state.\r\n   */\r\n  const loadActiveUser = () => {\r\n    return user\r\n      ? UserService.getUser(user.id).then((res: any) => {\r\n          setActiveUser(res.data);\r\n        })\r\n      : null;\r\n  };\r\n\r\n  function activeUserHasRole(roleToCheck: keyof typeof roles): boolean {\r\n    return user ? user.roles.some((role) => role.name === roleToCheck) : false;\r\n  }\r\n\r\n  /**\r\n   * Try to load the user-object from the localStorage if present.\r\n   * This is done automatically on the first render of this component.\r\n   */\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY);\r\n    if (token !== null) {\r\n      loadActiveUser();\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * If the user state is updated and the user is not equal to null,\r\n   * the data used in the AuthorityService as well as the data stored inside\r\n   * the localStorage will be updated with the new user-data.\r\n   */\r\n  useEffect(() => {\r\n    if (user !== null) {\r\n      AuthorityService.initAuthoritySet(user);\r\n      localStorage.setItem(USER_DATA_LOCAL_STORAGE_KEY, JSON.stringify(user));\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div>\r\n      <ActiveUserContext.Provider\r\n        value={{\r\n          user,\r\n          setActiveUser,\r\n          login,\r\n          logout,\r\n          loadActiveUser,\r\n          checkRole: activeUserHasRole,\r\n        }}\r\n      >\r\n        {children}\r\n      </ActiveUserContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\Router\\Router.tsx",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\Services\\UserService.ts",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\config\\Authorities.ts",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\config\\Api.ts",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\Services\\AuthorityService.ts",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\Router\\PrivateRoute.tsx",["233"],"import React, { useContext } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport * as jwt from \"jsonwebtoken\";\r\nimport ActiveUserContext from \"../Contexts/ActiveUserContext\";\r\nimport AuthorityService from \"../Services/AuthorityService\";\r\nimport { Authority } from \"../types/models/Authority.model\";\r\n\r\ninterface Props {\r\n  element: React.ReactElement;\r\n  authorities: Authority[];\r\n}\r\n\r\ntype JWTType = {\r\n  iss: string;\r\n  exp: number;\r\n};\r\n\r\nconst PrivateRoute: React.FC<Props> = ({\r\n  element: RouteComponent,\r\n  authorities: authorities,\r\n}) => {\r\n  const activeUserContext = useContext(ActiveUserContext);\r\n  /**\r\n   * isLoggedIn checks if the token, which is saved inside the localStorage,\r\n   * exists, isn't expired yet and has been issued by the correct issuer.\r\n   * If all of the above is true the user is seen as logged in.\r\n   */\r\n  const isLoggedIn = () => {\r\n    let tokenString = localStorage.getItem(\"token\");\r\n    if (!tokenString) {\r\n      console.error(\"no token found\");\r\n      return false;\r\n    }\r\n    tokenString = tokenString.replace(\"Bearer \", \"\");\r\n    const token: JWTType = jwt.decode(tokenString) as JWTType;\r\n    // Check if token does not exist or doesn't have an expiration claim or is expired.\r\n    if (!token || !token.exp || token.exp < Date.now() / 1000) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  /**\r\n   * If the user is not logged in call activeUserContext.logout, which destroys\r\n   * all locally saved user data and redirects to /login.\r\n   */\r\n  if (!isLoggedIn()) {\r\n    activeUserContext.logout();\r\n    return <Navigate to=\"/login\" replace={true} />;\r\n  }\r\n  /**\r\n   * Check if the active user has at least 1 of the needed authorities.\r\n   * If no authorities are needed true is returned.\r\n   */\r\n  const hasNeededAuthorities =\r\n    authorities.length === 0 ||\r\n    authorities.some((authority) => {\r\n      return AuthorityService.hasAuthority(authority.name);\r\n    });\r\n\r\n  /**\r\n   * If the user doesn't possess the needed authorities Redirect the user to\r\n   * /unauthorized\r\n   */\r\n  if (!hasNeededAuthorities) {\r\n    return <Navigate to=\"/unauthorized\" replace={true} />;\r\n  }\r\n\r\n  // All checks passed\r\n  return (\r\n    // Pagelayout puts the Navigation, Menu etc. around the component\r\n    RouteComponent\r\n  );\r\n};\r\nexport default PrivateRoute;\r\n","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\pages\\LoginPage\\LoginPage.tsx",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\pages\\HomePage\\HomePage.tsx",["234"],"import { Box } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ImagePostService } from \"../../../Services/ImagePostService\";\r\nimport { ImagePost } from \"../../../types/models/ImagePost.model\";\r\nimport BottomBar from \"../../organisms/BottomBar/BottomBar\";\r\nimport ImagePostBlog from \"../../organisms/ImagePostBlog/ImagePostBlog\";\r\nimport NavBar from \"../../organisms/NavBar/NavBar\";\r\n\r\n/**\r\n * Default page for all authenticated user. Displays all image posts from newest to oldest.\r\n * No posts can be edited here.\r\n */\r\nexport default function HomePage() {\r\n  const [imagePosts, setImagePosts] = useState<ImagePost[]>([]);\r\n  const [pageNumber, setPageNumber] = useState<number>(0);\r\n  const [canLoadMorePosts, setCanLoadMorePosts] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    ImagePostService()\r\n      .getAllImagePosts(pageNumber)\r\n      .then((data) => {\r\n        if (data.length === 0) {\r\n          setCanLoadMorePosts(false);\r\n        }\r\n        const newImagePosts: ImagePost[] = imagePosts.concat(data);\r\n        setImagePosts(newImagePosts);\r\n      }).catch((error) => {\r\n        alert(`Error: couldn't load image posts: ${error.message}`)\r\n      });\r\n  }, [pageNumber]);\r\n\r\n  return (\r\n    <Box>\r\n      <NavBar pageName=\"Homepage\" />\r\n      <ImagePostBlog\r\n        imagePostList={imagePosts}\r\n        postsEditable={false}\r\n        pageNumber={pageNumber}\r\n        setPageNumber={setPageNumber}\r\n        canLoadMorePosts={canLoadMorePosts}\r\n        isProfile={false}\r\n      />\r\n      <BottomBar />\r\n    </Box>\r\n  );\r\n}\r\n","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\pages\\UnauthorizedPage\\UnauthorizedPage.tsx",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\pages\\AdminPage\\AdminPage.tsx",["235","236"],"import { Box, Tab, Tabs } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ImagePostService } from \"../../../Services/ImagePostService\";\r\nimport UserService from \"../../../Services/UserService\";\r\nimport { ImagePost } from \"../../../types/models/ImagePost.model\";\r\nimport { User } from \"../../../types/models/User.model\";\r\nimport BottomBar from \"../../organisms/BottomBar/BottomBar\";\r\nimport ImagePostBlog from \"../../organisms/ImagePostBlog/ImagePostBlog\";\r\nimport NavBar from \"../../organisms/NavBar/NavBar\";\r\nimport UserList from \"../../organisms/UserList/UserList\";\r\n\r\nenum AdminTab {\r\n  BLOG,\r\n  USERS,\r\n}\r\n\r\n/**\r\n * Default page for admins. Displays a tab for all posts and all users. Admins can choose an\r\n * image post or user to edit or delete. The image post tab has the same functionality as\r\n * the home page of authenticated user.\r\n */\r\nexport default function AdminPage() {\r\n  const [imagePosts, setImagePosts] = useState<ImagePost[]>([]);\r\n  const [userList, setUserList] = useState<User[]>([]);\r\n  const [pageNumber, setPageNumber] = useState<number>(0);\r\n  const [canLoadMorePosts, setCanLoadMorePosts] = useState<boolean>(true);\r\n  const [tab, setTab] = useState<AdminTab>(AdminTab.BLOG);\r\n\r\n  useEffect(() => {\r\n    ImagePostService()\r\n      .getAllImagePosts(pageNumber)\r\n      .then((data) => {\r\n        if (data.length === 0) {\r\n          setCanLoadMorePosts(false);\r\n        }\r\n        const newImagePosts: ImagePost[] =\r\n          pageNumber === 0 ? data : imagePosts.concat(data);\r\n        setImagePosts(newImagePosts);\r\n      }).catch((error) => {\r\n        alert(`Error: couldn't load image posts: ${error.message}`)\r\n      });\r\n  }, [pageNumber]);\r\n\r\n  useEffect(() => {\r\n    UserService.getAllUsers(pageNumber).then((data) => {\r\n      const newUserList: User[] =\r\n        pageNumber === 0 ? data : userList.concat(data);\r\n      setUserList(newUserList);\r\n    }).catch((error) => {\r\n      alert(`Error: couldn't load users: ${error.message}`)\r\n    });\r\n  }, [pageNumber]);\r\n\r\n  //Handles the deletion of an user. Also filters the loaded image posts until new data is reloaded\r\n  const deleteUser = (user: User) => {\r\n    const newUserList = Array.from(userList);\r\n    const newImagePosts = imagePosts.filter(\r\n      (imagePost) => imagePost.author.email !== user.email\r\n    );\r\n    newUserList.splice(newUserList.indexOf(user), 1);\r\n    setUserList(newUserList);\r\n    UserService.deleteUser(user.id);\r\n    setImagePosts(newImagePosts);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar pageName=\"Admin Page\" />\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <Tabs\r\n          value={tab}\r\n          onChange={(_event, value) => {\r\n            setTab(value);\r\n            setCanLoadMorePosts(true);\r\n            setPageNumber(0);\r\n          }}\r\n          sx={{ width: \"100%\", maxWidth: \"1920px\", position: \"fixed\" }}\r\n        >\r\n          <Tab label=\"Blogs\" />\r\n          <Tab label=\"User\" />\r\n        </Tabs>\r\n        <Box hidden={tab !== AdminTab.BLOG}>\r\n          <ImagePostBlog\r\n            imagePostList={imagePosts}\r\n            postsEditable={true}\r\n            pageNumber={pageNumber}\r\n            setPageNumber={setPageNumber}\r\n            canLoadMorePosts={canLoadMorePosts}\r\n            isProfile={false}\r\n          />\r\n        </Box>\r\n        <Box hidden={tab !== AdminTab.USERS}>\r\n          <UserList users={userList} deleteUser={deleteUser} />\r\n        </Box>\r\n      </Box>\r\n      <BottomBar />\r\n    </div>\r\n  );\r\n}\r\n","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\pages\\LandingPage\\LandingPage.tsx",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\pages\\ProfilePage\\ProfilePage.tsx",["237","238"],"import { IconButton, Box } from \"@mui/material\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ActiveUserContext from \"../../../Contexts/ActiveUserContext\";\r\nimport { ImagePostService } from \"../../../Services/ImagePostService\";\r\nimport UserService from \"../../../Services/UserService\";\r\nimport { ImagePost } from \"../../../types/models/ImagePost.model\";\r\nimport BottomBar from \"../../organisms/BottomBar/BottomBar\";\r\nimport ImagePostBlog from \"../../organisms/ImagePostBlog/ImagePostBlog\";\r\nimport NavBar from \"../../organisms/NavBar/NavBar\";\r\nimport UserDetailsBox from \"../../organisms/UserDetailsBox/UserDetailsBox\";\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport CreatePostPopUp from \"../../molecules/CreatePostPopUp/CreateEditPostPopUp\";\r\nimport { Nullable } from \"../../../types/Nullable\";\r\nimport { User } from \"../../../types/models/User.model\";\r\nimport EditUserPopUp from \"../../molecules/EditUserPopUp/EditUserPopUp\";\r\n\r\n/**\r\n * Shows the profile page of a user. If a regular user tries to enter the url to another users profile page,\r\n * it will instead navigate to the unauthorized page. Admins can visit the profile page of all user. Here\r\n * users can edit or delete their image posts or create a new one.\r\n */\r\nexport default function ProfilePage() {\r\n  const { userid } = useParams()\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const activeUserContext = useContext(ActiveUserContext);\r\n  const activeUser = activeUserContext.user;\r\n\r\n  const [imagePosts, setImagePosts] = useState<ImagePost[]>([]);\r\n  const [user, setUser] = useState<Nullable<User>>(null)\r\n  const [pageNumber, setPageNumber] = useState<number>(0);\r\n  const [canLoadMorePosts, setCanLoadMorePosts] = useState<boolean>(true);\r\n\r\n  //loads the user of the profile page\r\n  useEffect(() => {\r\n    if (userid) {\r\n      UserService\r\n        .getUser(userid)\r\n        .then((data) => {\r\n          setUser(data.data)\r\n        }).catch(() => {\r\n          navigate(\"/unauthorized\")\r\n        })\r\n    }\r\n  }, [])\r\n\r\n  //Loads image post of the user of this profile page\r\n  useEffect(() => {\r\n    if (user) {\r\n      ImagePostService()\r\n        .getAllImagePostsByUser(user.email, pageNumber)\r\n        .then((data) => {\r\n          if (data.length === 0) {\r\n            setCanLoadMorePosts(false);\r\n          }\r\n          const newImagePosts: ImagePost[] = pageNumber === 0 ? data : imagePosts.concat(data);\r\n          setImagePosts(newImagePosts);\r\n        }).catch((error) => {\r\n          alert(`Error: couldn't load image posts: ${error.message}`)\r\n        });\r\n    }\r\n  }, [pageNumber, user]);\r\n\r\n  return (\r\n    <Box>\r\n      <NavBar pageName=\"Profile\" />\r\n      <IconButton onClick={() => {\r\n        navigate(-1)\r\n      }}>\r\n        <ArrowBackIosNewIcon />\r\n      </IconButton>\r\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n        <UserDetailsBox user={user} />\r\n        {user ?\r\n          (<EditUserPopUp user={user} />)\r\n          : <></>\r\n        }\r\n        <CreatePostPopUp activeUser={activeUser} sx={{ display: activeUser && user && activeUser.id === user.id ? undefined : \"none\" }} />\r\n      </Box>\r\n      <ImagePostBlog\r\n        imagePostList={imagePosts}\r\n        postsEditable={true}\r\n        pageNumber={pageNumber}\r\n        setPageNumber={setPageNumber}\r\n        canLoadMorePosts={canLoadMorePosts}\r\n        isProfile={true}\r\n      />\r\n      <BottomBar />\r\n    </Box>\r\n  );\r\n}\r\n","C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\Services\\ImagePostService.ts",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\organisms\\LandingPageBox\\LandingPageBox.tsx",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\organisms\\ImagePostBlog\\ImagePostBlog.tsx",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\organisms\\NavBar\\NavBar.tsx",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\organisms\\BottomBar\\BottomBar.tsx",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\organisms\\UserList\\UserList.tsx",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\organisms\\UserDetailsBox\\UserDetailsBox.tsx",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\molecules\\EditUserPopUp\\EditUserPopUp.tsx",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\molecules\\CreatePostPopUp\\CreateEditPostPopUp.tsx",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\molecules\\SearchBar\\SearchBar.tsx",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\molecules\\imagePost\\ImagePostEntry.tsx",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\molecules\\UserEntry\\UserEntry.tsx",[],"C:\\GitHub\\uek223_projektarbeit\\uek223-glk-npn-projektarbeit\\frontend\\src\\components\\molecules\\EditPostPopUp\\EditPostPopUp.tsx",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\index.tsx",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\App.tsx",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\Contexts\\ActiveUserContext.tsx",["239"],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\Router\\Router.tsx",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\config\\Api.ts",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\Services\\AuthorityService.ts",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\Services\\UserService.ts",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\config\\Authorities.ts",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\Router\\PrivateRoute.tsx",["240"],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\pages\\LoginPage\\LoginPage.tsx",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\pages\\HomePage\\HomePage.tsx",["241"],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\pages\\LandingPage\\LandingPage.tsx",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\pages\\ProfilePage\\ProfilePage.tsx",["242","243"],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\pages\\AdminPage\\AdminPage.tsx",["244","245"],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\pages\\UnauthorizedPage\\UnauthorizedPage.tsx",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\Services\\ImagePostService.ts",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\organisms\\ImagePostBlog\\ImagePostBlog.tsx",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\organisms\\BottomBar\\BottomBar.tsx",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\organisms\\NavBar\\NavBar.tsx",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\organisms\\LandingPageBox\\LandingPageBox.tsx",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\organisms\\UserDetailsBox\\UserDetailsBox.tsx",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\molecules\\EditUserPopUp\\EditUserPopUp.tsx",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\molecules\\CreatePostPopUp\\CreateEditPostPopUp.tsx",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\organisms\\UserList\\UserList.tsx",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\molecules\\imagePost\\ImagePostEntry.tsx",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\molecules\\SearchBar\\SearchBar.tsx",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\molecules\\UserEntry\\UserEntry.tsx",[],"C:\\GitHub\\pipeline\\pipeline-frontend\\src\\components\\molecules\\EditPostPopUp\\EditPostPopUp.tsx",[],{"ruleId":"246","severity":1,"message":"247","line":172,"column":6,"nodeType":"248","endLine":172,"endColumn":8,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":20,"column":3,"nodeType":"252","messageId":"253","endLine":20,"endColumn":27,"fix":"254"},{"ruleId":"246","severity":1,"message":"255","line":30,"column":6,"nodeType":"248","endLine":30,"endColumn":18,"suggestions":"256"},{"ruleId":"246","severity":1,"message":"255","line":42,"column":6,"nodeType":"248","endLine":42,"endColumn":18,"suggestions":"257"},{"ruleId":"246","severity":1,"message":"258","line":52,"column":6,"nodeType":"248","endLine":52,"endColumn":18,"suggestions":"259"},{"ruleId":"246","severity":1,"message":"260","line":47,"column":6,"nodeType":"248","endLine":47,"endColumn":8,"suggestions":"261"},{"ruleId":"246","severity":1,"message":"255","line":64,"column":6,"nodeType":"248","endLine":64,"endColumn":24,"suggestions":"262"},{"ruleId":"246","severity":1,"message":"247","line":172,"column":6,"nodeType":"248","endLine":172,"endColumn":8,"suggestions":"263"},{"ruleId":"250","severity":1,"message":"251","line":20,"column":3,"nodeType":"252","messageId":"253","endLine":20,"endColumn":27,"fix":"264"},{"ruleId":"246","severity":1,"message":"255","line":30,"column":6,"nodeType":"248","endLine":30,"endColumn":18,"suggestions":"265"},{"ruleId":"246","severity":1,"message":"260","line":47,"column":6,"nodeType":"248","endLine":47,"endColumn":8,"suggestions":"266"},{"ruleId":"246","severity":1,"message":"255","line":64,"column":6,"nodeType":"248","endLine":64,"endColumn":24,"suggestions":"267"},{"ruleId":"246","severity":1,"message":"255","line":42,"column":6,"nodeType":"248","endLine":42,"endColumn":18,"suggestions":"268"},{"ruleId":"246","severity":1,"message":"258","line":52,"column":6,"nodeType":"248","endLine":52,"endColumn":18,"suggestions":"269"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadActiveUser'. Either include it or remove the dependency array.","ArrayExpression",["270"],"no-useless-rename","Destructuring assignment authorities unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"271","text":"272"},"React Hook useEffect has a missing dependency: 'imagePosts'. Either include it or remove the dependency array.",["273"],["274"],"React Hook useEffect has a missing dependency: 'userList'. Either include it or remove the dependency array.",["275"],"React Hook useEffect has missing dependencies: 'navigate' and 'userid'. Either include them or remove the dependency array.",["276"],["277"],["278"],{"range":"279","text":"272"},["280"],["281"],["282"],["283"],["284"],{"desc":"285","fix":"286"},[531,555],"authorities",{"desc":"287","fix":"288"},{"desc":"287","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"285","fix":"296"},[531,555],{"desc":"287","fix":"297"},{"desc":"292","fix":"298"},{"desc":"294","fix":"299"},{"desc":"287","fix":"300"},{"desc":"290","fix":"301"},"Update the dependencies array to be: [loadActiveUser]",{"range":"302","text":"303"},"Update the dependencies array to be: [imagePosts, pageNumber]",{"range":"304","text":"305"},{"range":"306","text":"305"},"Update the dependencies array to be: [pageNumber, userList]",{"range":"307","text":"308"},"Update the dependencies array to be: [navigate, userid]",{"range":"309","text":"310"},"Update the dependencies array to be: [imagePosts, pageNumber, user]",{"range":"311","text":"312"},{"range":"313","text":"303"},{"range":"314","text":"305"},{"range":"315","text":"310"},{"range":"316","text":"312"},{"range":"317","text":"305"},{"range":"318","text":"308"},[5566,5568],"[loadActiveUser]",[1213,1225],"[imagePosts, pageNumber]",[1695,1707],[2020,2032],"[pageNumber, userList]",[2099,2101],"[navigate, userid]",[2664,2682],"[imagePosts, pageNumber, user]",[5566,5568],[1213,1225],[2099,2101],[2664,2682],[1695,1707],[2020,2032]]